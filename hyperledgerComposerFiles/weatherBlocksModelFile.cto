namespace org.dltcamp.weatherBlocks

asset Contract identified by contractId {
  o String contractId
  --> Farmer buyer //seeks protection
  --> Underwriter seller //offers protection
  --> Sensor observedSensor
  o Double premium
  o Double notional
  o Double threshold
  o DateTime start
  o DateTime last_check_timestamp
  o DateTime checking_status_frequency
  o DateTime end
  o ContractStatus status
  //Payout conditions, could be made more generic
 }

enum ContractStatus {
  o LIVE // after initiation
  o DEAD // when time-out event occured
  o SETTLED // when pay-out event occured
}

asset Sensor identified by sensorId {
  o String sensorId
  o String initialLatitude
  o String initialLongitude
  o SensorReading[] sensorReadings optional
}

concept SensorData {
  o DateTime TimeStamp
  o Double temperature
  o Double humidity
  o Double soil
  o Double light
}

abstract transaction SensorReadingTransaction {
    --> Sensor sensor
}

transaction TemperatureReading extends SensorReadingTransaction{
  o Double temperature
}

event ContractTimeOut {
  --> Contract contract
}

event ContractPayOut {
  --> Contract contract
}


/***
Types of data points:
  o Double airHumidity // in %
  o Double soilHumidity // in %
  o Double temperature // in Â°C
  o Double airPressure // in hPa
  o Double rainFall // in mm
 */

/**
 * An abstract transaction that is related to a sensor
 */


// transaction PressureReading extends SensorReadingTransaction {
//   o Double pressure
// }

// transaction AirHumidityReading extends SensorReadingTransaction {
//   o Double airHumidity
// }

// transaction SoilHumidityReading extends SensorReadingTransaction {
//   o Double soilHumidity
// }

transaction SensorReading extends SensorReadingTransaction {
  o Double temperature
  o Double humidity
  o Double light
  o Double soil
  o String readingTime
  o String gpsCordinates
}


/**
 * An abstract participant type in this business network
 */
abstract participant Business identified by email {
  o String email
  o Double accountBalance
}

/**
 * A Farmer is a type of participant in the network, typically the buyer of the contract
 */
participant Farmer extends Business {
}

/**
 * An Underwriter is a type of participant in the network, typically seller of the contract, calculating also the price of the contract based on his pricing model
 */
participant Underwriter extends Business {
}

